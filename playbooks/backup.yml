---
- name: Schedule backup
  hosts: homelab
  become: true

  vars:
    backup_directories:
      - source: "/docker/data/"
        dest: "/mnt/nas/docker_data/"
      - source: "/docker/paperless/"
        dest: "/mnt/nas/paperless/"
      - source: "/docker/syncthing/"
        dest: "/mnt/nas/syncthing/"
      - source: "/docker/books/"
        dest: "/mnt/nas/books/"

  tasks:
    - name: Create the backup script directory
      file:
        path: /usr/local/bin
        state: directory
        mode: '0755'

    - name: Create the backup script
      copy:
        dest: /usr/local/bin/backup
        content: |
          #!/bin/bash
          LOG_FILE="/var/log/backup.log"
          SOURCE_DIRS=({% for dir in backup_directories %} "{{ dir.source }}" {% endfor %})
          DEST_DIRS=({% for dir in backup_directories %} "{{ dir.dest }}" {% endfor %})

          echo "---- Backup started at $(date +'%Y-%m-%d %H:%M:%S')" >> $LOG_FILE

          for i in "${!SOURCE_DIRS[@]}"; do
            SOURCE_DIR=${SOURCE_DIRS[$i]}
            DEST_DIR=${DEST_DIRS[$i]}
            echo "++++ Backing up from $SOURCE_DIR to $DEST_DIR" >> $LOG_FILE
            rsync -avh --delete --no-perms --no-o --no-g "$SOURCE_DIR" "$DEST_DIR" >> $LOG_FILE 2>&1
          done

          echo "---- Backup completed at $(date +'%Y-%m-%d %H:%M:%S')" >> $LOG_FILE
        mode: '0755'

    - name: Create systemd service for backup script
      copy:
        dest: /etc/systemd/system/backup.service
        content: |
          [Unit]
          Description=Run backup script

          [Service]
          Type=oneshot
          ExecStart=/usr/local/bin/backup

          [Install]
          WantedBy=multi-user.target
      notify:
        - Reload systemd

    - name: Create systemd timer for backup script
      copy:
        dest: /etc/systemd/system/backup.timer
        content: |
          [Unit]
          Description=Run backup script nightly

          [Timer]
          OnCalendar=*-*-* 01:00:00
          Persistent=true

          [Install]
          WantedBy=timers.target
      notify:
        - Reload systemd

    - name: Enable and start the systemd timer
      systemd:
        name: backup.timer
        enabled: true
        state: started

    - name: Configure logrotate for backup log
      copy:
        dest: /etc/logrotate.d/backup
        content: |
          su root root
          /var/log/backup.log {
              weekly
              rotate 4
              compress
              missingok
              notifempty
              create 0640 root root
              sharedscripts
              postrotate
                  systemctl reload rsyslog > /dev/null 2> /dev/null || true
              endscript
          }

  handlers:
    - name: Reload systemd
      command: systemctl daemon-reload
